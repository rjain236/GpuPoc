<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"

	   xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context.xsd
						   http://www.springframework.org/schema/tx
        				   http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
http://www.springframework.org/schema/tx "
	   default-lazy-init="false">
	<!-- Activates scanning of @Autowired -->
	<context:annotation-config/>
	<!-- Activates scanning of @Repository and @Service -->
	<!--context:component-scan base-package="com.finmechanics.xit"/ -->
	<!-- http://docs.spring.io/spring/docs/3.0.0.M3/reference/html/ch04s12.html -->
	<context:component-scan base-package="com.codefellas,com.finmechanics" use-default-filters="true"/>

	<!--<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">-->
		<!--<property name="driverClassName" value="net.sourceforge.jtds.jdbc.Driver"/>-->
		<!--<property name="url" value="jdbc:jtds:sqlserver://172.16.146.146:1433/FMCONVERGE;instance=SQLEXPRESS"/>-->
		<!--<property name="username" value="sa"/>-->
		<!--<property name="password" value="sadmin"/>-->
	<!--</bean>-->

	<!--<bean id="sessionFactory"-->
		  <!--class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">-->
		<!--<property name="dataSource" ref="dataSource"/>-->
		<!--<property name="configLocation" value="classpath:hibernate.cfg.xml">-->
		<!--</property>-->
		<!--<property name="entityInterceptor">-->
			<!--<bean class="com.finmechanics.audit.interceptor.AuditInterceptor"/>-->
		<!--</property>-->
		<!--<property name="hibernateProperties">-->
			<!--<props>-->
				<!--<prop key="dynamic-update">true</prop>-->
				<!--<prop key="show_sql">true</prop>-->
				<!--<prop key="hibernate.dialect">org.hibernate.dialect.SQLServer2012Dialect</prop>-->
				<!--<prop key="hibernate.connection.autocommit">false</prop>-->
				<!--&lt;!&ndash; <prop key="hibernate.query.factory_class">org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory</prop> &ndash;&gt;-->
				<!--<prop key="hibernate.query.factory_class">-->
					<!--org.hibernate.hql.internal.classic.ClassicQueryTranslatorFactory-->
				<!--</prop>-->

				<!--&lt;!&ndash; check db types before enabling &ndash;&gt;-->
				<!--&lt;!&ndash;prop key="hibernate.hbm2ddl.auto">validate</prop &ndash;&gt;-->
				<!--&lt;!&ndash;prop key="hibernate.hbm2ddl.auto">update</prop&ndash;&gt;-->
				<!--<prop key="hibernate.bytecode.use_reflection_optimizer">false</prop>-->
				<!--<prop key="hibernate.format_sql">true</prop>-->
				<!--<prop key="hibernate.c3p0.min_size">5</prop>-->
				<!--<prop key="hibernate.c3p0.max_size">20</prop>-->
				<!--<prop key="hibernate.c3p0.timeout">300</prop>-->
				<!--<prop key="hibernate.c3p0.max_statements">50</prop>-->
				<!--<prop key="hibernate.c3p0.idle_test_period">3000</prop>-->

				<!--<prop key="org.hibernate.envers.do_not_audit_optimistic_locking_field">false</prop>-->
				<!--<prop key="hibernate.ejb.event.post-insert">-->
					<!--org.hibernate.ejb.event.EJB3PostInsertEventListener,org.hibernate.envers.event.AuditEventListener-->
				<!--</prop>-->
				<!--<prop key="hibernate.ejb.event.post-update">-->
					<!--org.hibernate.ejb.event.EJB3PostUpdateEventListener,org.hibernate.envers.event.AuditEventListener-->
				<!--</prop>-->
				<!--<prop key="hibernate.ejb.event.post-delete">-->
					<!--org.hibernate.ejb.event.EJB3PostDeleteEventListener,org.hibernate.envers.event.AuditEventListener-->
				<!--</prop>-->
				<!--<prop key="hibernate.ejb.event.pre-collection-update">org.hibernate.envers.event.AuditEventListener-->
				<!--</prop>-->
				<!--<prop key="hibernate.ejb.event.pre-collection-remove">org.hibernate.envers.event.AuditEventListener-->
				<!--</prop>-->
				<!--<prop key="hibernate.ejb.event.post-collection-recreate">org.hibernate.envers.event.AuditEventListener-->
				<!--</prop>-->
			<!--</props>-->
		<!--</property>-->
	<!--</bean>-->

	<!--<tx:annotation-driven transaction-manager="transactionManager"/>-->

	<!--<bean id="transactionManager" class="com.finmechanics.HibernateHazelcastTransactionManager">-->
		<!--<property name="sessionFactory" ref="sessionFactory"/>-->
		<!--<property name="hazelcastDataPersistService" ref="hazelcastDataPersistService"/>-->
		<!--<property name="hazelcastAppDataPersistService" ref="hazelcastAppDataPersistService"/>-->
		<!--<property name="hazelcastDataDeleteService" ref="hazelcastDataDeleteService"/>-->
		<!--<property name="hazelcastAppDataDeleteService" ref="hazelcastAppDataDeleteService"/>-->
	<!--</bean>-->

	<!--<bean id="hazelcastDataPersistService"-->
		  <!--class="com.finmechanics.fmconverge.data.query.hazelcast.HazelcastDataPersistService">-->
		<!--<qualifier value="HazelcastDataPersistService"/>-->
	<!--</bean>-->
	<!--<bean id="hazelcastAppDataPersistService" class="com.finmechanics.service.HazelcastAppDataPersistServiceImpl">-->
		<!--<qualifier value="HazelcastAppDataPersistService"/>-->
	<!--</bean>-->
	<!--<bean id="hazelcastDataDeleteService"-->
		  <!--class="com.finmechanics.fmconverge.data.query.hazelcast.HazelCastDataDeleteServiceImp">-->
		<!--<qualifier value="HazelcastDataDeleteService"/>-->
	<!--</bean>-->
	<!--<bean id="hazelcastAppDataDeleteService" class="com.finmechanics.service.HazelcastAppDataDeleteServiceImpl">-->
		<!--<qualifier value="HazelcastAppDataDeleteService"/>-->
	<!--</bean>-->
</beans>
